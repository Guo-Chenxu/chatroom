@startuml

新用户 -> 系统 : 注册信息
系统 --> 新用户 : 返回信息（成功或失败）

用户1 -> 系统 : 登录请求

alt 失败

    用户1 <-- 系统 : 登录失败

else 成功

    用户1 <-- 系统 : 登录成功

    activate 用户1

    loop 添加人脸

        用户1 -> 系统 : 添加人脸请求
        alt 成功
            用户1 <-- 系统 : 成功
        else 失败
            用户1 <-- 系统 : 失败
        end
    else 用户获取好友列表

        用户1 -> 系统 : 获取好友列表
        alt 成功
            用户1 <-- 系统 : 发送好友列表
        else 失败
            用户1 <-- 系统 : 失败
        end

    else 删除好友

        用户1 -> 系统 : 删除好友
        alt 成功
            用户1 <-- 系统 : 成功
        else 失败
            用户1 <-- 系统 : 失败
        end

    else 添加好友

        用户1 -> 系统 : 添加用户2为好友
        系统 -> 用户2 : 用户1请求添加你为好友
        alt 添加成功
            用户2 --> 系统 : 同意
            系统 --> 用户1 : 添加成功
        else 添加失败
            用户2 --> 系统 : 拒绝
        end

    else 获取群聊列表

        用户1 -> 系统 : 获取群聊列表
        alt 成功
            用户1 <-- 系统 : 成功
        else 失败
            用户1 <-- 系统 : 失败
        end

    else 建立群聊

        用户1 -> 系统 : 建立群聊
        alt 成功
            用户1 <-- 系统 : 成功
        else 失败
            用户1 <-- 系统 : 失败
        end

    else 加入群聊

        用户1 -> 系统 : 加入群聊
        alt 成功
            用户1 <-- 系统 : 成功
        else 失败
            用户1 <-- 系统 : 失败
        end

    else 离开群聊

        用户1 -> 系统 : 离开群聊
        alt 成功
            用户1 <-- 系统 : 成功
        else 失败
            用户1 <-- 系统 : 失败
        end

    else 获取群聊内所有用户

        用户1 -> 系统 : 获取群聊内所有用户
        alt 成功
            用户1 <-- 系统 : 成功
        else 失败
            用户1 <-- 系统 : 失败
        end

    else 获取消息记录

        alt 获取群聊消息记录
            用户1 -> 系统 : 获取群聊消息记录
            alt 成功
                用户1 <-- 系统 : 成功
            else 失败
                用户1 <-- 系统 : 失败

            end

        else 获取好友消息记录
            用户1 -> 系统 : 获取好友消息记录
            alt 成功
                用户1 <-- 系统 : 成功
            else 失败
                用户1 <-- 系统 : 失败
            end
        end
    else 发送消息

        alt 发送好友消息
            用户1 -> 系统 : 发送好友消息
            alt 用户3在线
                用户3 <- 系统 : 用户1发送一条消息
            else 用户3不在线
                系统-->用户1 : 用户3不在线,消息会在用户3上线时送达
            end
        end
    end
end


@enduml